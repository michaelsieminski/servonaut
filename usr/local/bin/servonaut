#!/bin/bash

# Ensure root privileges for the script to work
if [ "$(id -u)" != "0"]; then
    echo "This script must be run as root" 1>&2
    exit 1
fi

# Update and upgrade the packages
apt update && apt upgrade -y

# Install required packages
apt install -y curl unzip

# Install Bun
curl -fsSL https://bun.sh/install | bash

# Download & Install Caddy Web Server
curl -o caddy.tar.gz -L "https://caddyserver.com/api/download?os=linux&arch=arm64&idempotency=29341600578110"
tar xzf caddy.tar.gz
mv caddy /usr/local/bin/
rm caddy.tar.gz

# Setup Caddy as a service
cat > /etc/systemd/system/caddy.service << EOF
[Unit]
Description=Caddy Web Server
After=network.target

[Service]
ExecStart=/usr/local/bin/caddy run --config /etc/caddy/Caddyfile
ExecReload=/usr/local/bin/caddy reload --config /etc/caddy/Caddyfile
TimeoutStopSec=5s
LimitNOFILE=1048576
LimitNPROC=512
PrivateTmp=true
ProtectSystem=full
AmbientCapabilities=CAP_NET_BIND_SERVICE

[Install]
WantedBy=multi-user.target
EOF

systemctl enable caddy.service
systemctl start caddy.service

# Setup nuxt project directory
mkdir -p /var/www/app
cd /var/www/app

# Clone the repo
git clone https://github.com/michaelsieminski/comfy-market.git .

# Install dependencies
bun install

# Build the nuxt project
bun run build

# Create a systemd service for the nuxt project
cat > /etc/systemd/system/nuxt.service << EOF
[Unit]
Description=Nuxt Application
After=network.target

[Service]
Type=simple
User=www-data
WorkingDirectory=/var/www/app
ExecStart=$(which bun) run start
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF

systemctl enable nuxt.service
systemctl start nuxt.service

# Configure Caddy as a reverse proxy
mkdir -p /etc/caddy
cat > /etc/caddy/Caddyfile << EOF
comfymarket.com {
    reverse_proxy localhost:3000
}
EOF

# Reload Caddy to apply the changes
systemctl reload caddy.service

echo "Setup complete! You can now access your Nuxt application at https://comfymarket.com"
